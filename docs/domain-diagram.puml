@startuml Demy Domain Diagram

skinparam class {
    BackgroundColor LightYellow/D3F5F5
    ArrowColor SeaGreen
}

package "Enrollment Context" <<Node>> #E0FFF9 {
    class Enrollment <<(A, #27D3F5) Aggregate Root>> {
        - Long id
    }
    class Student <<(E, #9ACD32) Entity>> {
        - Long id
    }
    enum EnrollmentStatus <<(E, #FFA500) Value Object>> {
        ACTIVE
        INACTIVE
    }
    class AcademicPeriod <<(E, #9ACD32) Entity>> {
        - Long id
    }
    ' Relationships
    Enrollment "1" --> "1" Student : for >
    AcademicPeriod "1" o-- "0..*" Enrollment : includes >
    Enrollment "1" --> "1" EnrollmentStatus : has >
}

package "Institution Management Context" <<Node>> #F0FFF0 {
    class Academy <<(A, #27D3F5) Aggregate Root>> {
        - Long id
        + addTeacher(Teacher)
        + assignAdministrator(Administrator)
    }
    class Administrator <<(E, #9ACD32) Entity>> {
        - Long id
    }

    class Teacher <<(E, #9ACD32) Entity>> {
        - Long id
    }
    ' Relationships
    Administrator --> Academy : creates >
    Academy --> Administrator : isManagedBy >
    Academy --> Teacher : includes >
}

package "Scheduling Context" <<Node>> #FFF0F0 {
    class Schedule <<(A, #27D3F5) Aggregate Root>> {
        - Long id
        + addClassSession(ClassSession)
        + removeClassSession(ClassSession)
        + validateConflicts(): boolean
    }

    class ClassSession <<(E, #9ACD32) Entity>> {
        - Long id
    }

    class Course <<(E, #9ACD32) Entity>> {
        - Long id
    }

    class Room <<(E, #9ACD32)Entity>> {
        - Long id
    }

    ' Relationships
    Schedule "1" --> "0..*" ClassSession : contains >
    ClassSession "1" --> "1" Course : belongsTo >
    ClassSession "1" --> "1" Room : heldIn >
}

package "Attendance Context" <<Node>> #F0F8FF {
    class AttendanceRecord <<(A, #27D3F5) Aggregate Root>> {
        - Long id
        + markAttendance(Student, ClassSession)
    }
    class AttendanceStatus <<(E, #9ACD32) Value Object>> {
        PRESENT
        ABSENT
        EXCUSED
    }
    ' Relationships
    AttendanceRecord "1" --> "1" Student : for >
    AttendanceRecord "1" --> "1" ClassSession : during >
    AttendanceRecord "1" --> "1" AttendanceStatus : has >
}

package "Shared Context" as sc <<Node>> #FFF5F5 {
    class TeacherId <<(E, #9ACD32) Value Object>> {
        - Long id
    }
}

' Define relationships between contexts
ClassSession "1" --> "1" TeacherId : taughtBy >

@enduml